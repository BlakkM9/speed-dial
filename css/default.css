/* Checkboard pattern (Mozilla style) */
.checkboard {
    background-image: /* tint image */
            linear-gradient(to right, rgba(235, 235, 235, 0.865), rgba(235, 235, 235, 0.865)),
                /* checkered effect */
            linear-gradient(to right, black 50%, white 50%),
            linear-gradient(to bottom, black 50%, white 50%);
    background-blend-mode: normal, difference, normal;
    background-size: 4vmin 4vmin;
}

body {
    width: 100vw;
    height: 100vh;
    margin: 0;
    background-color: var(--main-bg-color);
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: "Segoe UI", sans-serif;
    color: var(--text-primary-color);
}

::selection {
    background: var(--text-primary-color);
    color: var(--input-bg-color);
}

::placeholder {
    color: var(--text-secondary-color);
}

label {
    line-height: 30px;
    height: 30px;
    padding-right: 3px;
}

a {
    border-radius: 2px;
    color: var(--link-default);
    cursor: alias;
    text-decoration: none;
    -moz-user-select: none;
}

a:hover {
    text-decoration: underline;
}

a:focus {
    outline: none;
    text-decoration: underline;
    color: var(--link-pressed);
}

a:active {
    color: var(--link-pressed);
}

a:visited {
    text-decoration: none;
}

hr {
    margin: 0;
    height: 1px;
    background-color: var(--border-color);
    border:none;
}

.anti-error {
    display: none;
}

.svg.path.info {
    fill: var(--text-secondary-color);
}

svg.drop-down {
    fill: var(--text-primary-color);
    width: 12px;
    height: 12px;
    transform: rotate(90deg);
    transition: transform 0.2s ease-in-out;
}

svg.drop-down.active {
    transform: rotate(0deg);
}

.svg-icon {
    fill: var(--icon-secondary-color);
}

.svg-icon:hover {
    fill: var(--icon-primary-color);
}

.window {
    padding: 15px;
    border-radius: 2px;
    box-shadow: var(--shadow-default);
    background-color: var(--main-bg-color);
    color: var(--text-primary-bright-color);
}

.window-container {
    display: none;
    width: 100vw;
    height: 100vh;
    position: absolute;
    justify-content: center;
    align-items: center;
    background-color: var(--overlay-color);
    z-index: 4;
}

.header1 {
    color: var(--text-primary-color);
    font-size: 22px;
    font-weight: 300;
    padding: 10px 0
}

.header2 {
    color: var(--text-primary-color);
    font-size: 17px;
    font-weight: 600;
    padding: 10px 0;
}

.header3 {
    color: var(--text-primary-color);
    font-size: 15px;
    font-weight: 700;
}

.option-row {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    padding: 7px 0;
}

.option-row:last-of-type {
    padding-bottom: 20px;
}

.option-row:first-child {
    padding-top: 0;
}

.option-row .text-input {
    margin: 0 2px;
}

.option-row .icon {
    font-size: 15px;
    width: 7px;
    text-align: center;
}

.option-row.option-text-input {
    flex-direction: column;
    align-items: flex-start;
    width: 100%;
}

.option-row.option-text-input:nth-child(2) {
    padding-bottom: 20px;
}

.label {
    margin-right: 25px;
}

.label > .primary {
    font-size: 15px;
    color: var(--text-primary-color)
}

.label > .secondary {
    font-size: 13px;
    color: var(--text-secondary-color);
}

.label > a {
    font-size: 13px;
}

.label.right {
    margin: 0;
}

.text-input-long-label {
    font-size: 13px;
    color: var(--text-primary-color);
    margin-bottom: 6px;
}

.color-input-container {
    display: flex;
    position: relative;
    flex-direction: row;
}

.color-input-container > .color-pipette {
    position: absolute;
    margin-left: -16px;
    width: 26px;
    height: 26px;
    cursor: pointer;
}

.picking-color-allowed {
    cursor: url("../images/pipette.png") 7 25, default !important;
}

.color-input-container > .hashtag {
    position: relative;
    top: 2px;
    left: 15px;
    -moz-user-select: none;
}

.color-input-container > .text-input {
    width: 44px;
    margin-right: 11px;
    padding-left: 13px;
    text-align: left;
}

.color-input-container > .text-input:before {
    content: "#";
}

.color-input-frame {
    position: relative;
    width: 32px;
    height: 24px;
    left: -1px;
    border: 1px solid var(--border-color);
    border-radius: 3px;
}

.color-input-frame:hover {
    border: 1px solid var(--border-color-hover);
}



.color-input {
    width: 100%;
    height: 100%;
    padding: 0;
    opacity: 0;
}

.two-text-input-frame {
    display: flex;
    flex-direction: row;
}

.text-input {
    justify-self: center;
    width: 24px;
    height: 16px;
    border: 1px solid var(--border-color);
    border-radius: 2px;
    padding: 4px 4px;
    color: var(--text-primary-bright-color);
    background-color: var(--input-bg-color);
    text-align: center;
}

.text-input:hover {
    border: 1px solid var(--border-color-hover);
}

.text-input:focus {
    border: 1px solid #0a84ff;
}

.text-input:disabled {
    color: var(--text-secondary-color);
    background-color: transparent;
}

.text-input.long {
    box-sizing: border-box;
    width: 100%;
    height: 26px;
    text-align: left;
    margin: 0;
}

.checkbox-input-frame {
    display: block;
    width: 18px;
    height: 18px;
    position: relative;
    padding: 0;
    left: -1px;
    cursor: pointer;
    justify-self: center;
    align-self: center;
}

.checkbox-input-frame input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    width: 16px;
    height: 16px;
    border: 1px solid var(--border-color);
    border-radius: 2px;
    background-color: var(--input-bg-color);
    transition: all var(--default-transition) 0.25s;
}

/* On mouse-over, add a grey background color */
.checkbox-input-frame:hover input ~ .checkmark {
    border: 1px solid var(--blue-focus);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.checkbox-input-frame input:checked ~ .checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.checkbox-input-frame .checkmark:after {
    top: 1px;
    left: 5px;
    width: 4px;
    height: 9px;
    border: solid var(--text-primary-bright-color);
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
}

input[type=file] {
    visibility: hidden;
    width: 0;
}

.button-container {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    margin: 0 -5px;
}

.button-container > .left {
    display: flex;
    flex-direction: row;
}

.button-container > .right {
    display: flex;
    flex-direction: row;
    align-items: center;
}

.button-container .button {
    margin: 0 5px;
}

label.button {
    height: 16px;
    line-height: 16px;
}

.button {
    width: auto;
    height: 32px;
    font-size: 13px;
    font-weight: 400;
    padding: 8px;
    justify-self: center;
    border-radius: 2px;
    text-align: center;
    background-color: var(--button-bg-default);
    color: var(--text-primary-bright-color);
    border: none;
    cursor: pointer;
    transition: background-color 0.1s;
    font-family: "Arial", sans-serif;
    opacity: 1;
}

.button.min-width {
    min-width: 132px;
}

.button:hover {
    background-color: var(--button-bg-hover);
}

.button:active {
    background-color: var(--button-bg-pressed);
}

.button:disabled {
    background-color: var(--button-bg-default);
    opacity: 0.4;
}

/* Labels used as buttons */
.button:disabled, input:disabled + label {
    background-color: var(--button-bg-default);
    opacity: 0.4;
}

.button.primary {
    background-color: var(--button-primary-bg-default);
}

.button.primary:hover {
    background-color: var(--button-primary-bg-hover);
}

.button.primary:active {
    background-color: var(--button-primary-bg-pressed);
}

.button.primary:disabled {
    background-color: var(--button-primary-bg-default);
}

/* Red button */
.button.danger {
    background-color: var(--button-danger-bg-default);
}

.button.danger:hover {
    background-color: var(--button-danger-bg-hover);
}

.button.danger:active {
    background-color: var(--button-danger-bg-pressed);
}

.button.danger:disabled {
    background-color: var(--button-danger-bg-default);
}

/* Info */
.info.hover.icon {
    width: 20px;
    height: 20px;
    justify-self: center;
    cursor: help;
}

.button.drop-down {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    height: 16px;
}

.button.drop-down > .button {
    background-color: transparent;
    padding: 0;
    height: auto;
}

.button.drop-down > svg.drop-down {
    margin-left: 4px;
}

/* Text input animation */
.text-input.long.upload-animation {
    display: none;
    position: relative;
    margin-top: -26px;
    background-color: transparent;
    border: 1px solid #0a84ff;
    animation: uploading 0.85s cubic-bezier(.45,.05,.55,.95) infinite;
}

@keyframes uploading {
    0% {clip-path: inset(0px 208px 0px 0px)}
    50% {clip-path: inset(0px 0px 0px 208px)}
    100% {clip-path: inset(0px 208px 0px 0px)}
}