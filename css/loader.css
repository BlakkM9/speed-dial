#loader {
    display: none;
}

/*Loading animation (including HTML in corresponding tags)*/
/**/
/*The MIT License (MIT)*/
/**/
/*Copyright (c) 2015 Tobias Ahlin*/
/**/
/*Permission is hereby granted, free of charge, to any person obtaining a copy of*/
/*this software and associated documentation files (the "Software"), to deal in*/
/*the Software without restriction, including without limitation the rights to*/
/*use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of*/
/*the Software, and to permit persons to whom the Software is furnished to do so,*/
/*subject to the following conditions:*/

/*The above copyright notice and this permission notice shall be included in all*/
/*copies or substantial portions of the Software.*/

/*THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR*/
/*IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS*/
/*FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR*/
/*COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER*/
/*IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN*/
/*CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.*/

.sk-cube-grid {
    width: 128px;
    height: 72px;
}

.sk-cube-grid .sk-cube {
    width: 30%;
    height: 30%;
    margin: 1%;
    background-color: white;
    float: left;
    animation: sk-cubeGridScaleDelay 1.3s infinite ease-in-out;
}

.sk-cube-grid .sk-cube1 {
    animation-delay: 0.2s; }
.sk-cube-grid .sk-cube2 {
    animation-delay: 0.3s; }
.sk-cube-grid .sk-cube3 {
    animation-delay: 0.4s; }
.sk-cube-grid .sk-cube4 {
    animation-delay: 0.1s; }
.sk-cube-grid .sk-cube5 {
    animation-delay: 0.2s; }
.sk-cube-grid .sk-cube6 {
    animation-delay: 0.3s; }
.sk-cube-grid .sk-cube7 {
    animation-delay: 0s; }
.sk-cube-grid .sk-cube8 {
    animation-delay: 0.1s; }
.sk-cube-grid .sk-cube9 {
    animation-delay: 0.2s; }

@-webkit-keyframes sk-cubeGridScaleDelay {
    0%, 70%, 100% {
        transform: scale3D(1, 1, 1);
    } 35% {
          transform: scale3D(0, 0, 1);
      }
}

@keyframes sk-cubeGridScaleDelay {
    0%, 70%, 100% {
        transform: scale3D(1, 1, 1);
    } 35% {
          transform: scale3D(0, 0, 1);
      }
}